<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\obj\LCD_picture.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\obj\LCD_picture.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 4.1 [Build 894]: Last Updated: Thu May 31 11:21:39 2018
<BR><P>
<H3>Maximum Stack Usage =         92 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; Input_Key &rArr; Clear_Digit &rArr; fill_Rectangle &rArr; draw_Pixel &rArr; lcdSetAddr
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[5]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SysTick_Handler</a><BR>
 <LI><a href="#[24]">Default_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[24]">Default_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1f]">ACMP_IRQHandler</a> from startup_nuc100series.o(.text) referenced from startup_nuc100series.o(RESET)
 <LI><a href="#[23]">ADC_IRQHandler</a> from startup_nuc100series.o(.text) referenced from startup_nuc100series.o(RESET)
 <LI><a href="#[6]">BOD_IRQHandler</a> from startup_nuc100series.o(.text) referenced from startup_nuc100series.o(RESET)
 <LI><a href="#[1a]">CAN0_IRQHandler</a> from startup_nuc100series.o(.text) referenced from startup_nuc100series.o(RESET)
 <LI><a href="#[1b]">CAN1_IRQHandler</a> from startup_nuc100series.o(.text) referenced from startup_nuc100series.o(RESET)
 <LI><a href="#[24]">Default_Handler</a> from startup_nuc100series.o(.text) referenced from startup_nuc100series.o(RESET)
 <LI><a href="#[8]">EINT0_IRQHandler</a> from startup_nuc100series.o(.text) referenced from startup_nuc100series.o(RESET)
 <LI><a href="#[9]">EINT1_IRQHandler</a> from main.o(i.EINT1_IRQHandler) referenced from startup_nuc100series.o(RESET)
 <LI><a href="#[a]">GPAB_IRQHandler</a> from startup_nuc100series.o(.text) referenced from startup_nuc100series.o(RESET)
 <LI><a href="#[b]">GPCDEF_IRQHandler</a> from startup_nuc100series.o(.text) referenced from startup_nuc100series.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_nuc100series.o(.text) referenced from startup_nuc100series.o(RESET)
 <LI><a href="#[18]">I2C0_IRQHandler</a> from startup_nuc100series.o(.text) referenced from startup_nuc100series.o(RESET)
 <LI><a href="#[19]">I2C1_IRQHandler</a> from startup_nuc100series.o(.text) referenced from startup_nuc100series.o(RESET)
 <LI><a href="#[21]">I2S_IRQHandler</a> from startup_nuc100series.o(.text) referenced from startup_nuc100series.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_nuc100series.o(.text) referenced from startup_nuc100series.o(RESET)
 <LI><a href="#[20]">PDMA_IRQHandler</a> from startup_nuc100series.o(.text) referenced from startup_nuc100series.o(RESET)
 <LI><a href="#[1e]">PS2_IRQHandler</a> from startup_nuc100series.o(.text) referenced from startup_nuc100series.o(RESET)
 <LI><a href="#[c]">PWM0_IRQHandler</a> from startup_nuc100series.o(.text) referenced from startup_nuc100series.o(RESET)
 <LI><a href="#[d]">PWM1_IRQHandler</a> from startup_nuc100series.o(.text) referenced from startup_nuc100series.o(RESET)
 <LI><a href="#[22]">PWRWU_IRQHandler</a> from startup_nuc100series.o(.text) referenced from startup_nuc100series.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_nuc100series.o(.text) referenced from startup_nuc100series.o(RESET)
 <LI><a href="#[25]">RTC_IRQHandler</a> from startup_nuc100series.o(.text) referenced from startup_nuc100series.o(RESET)
 <LI><a href="#[2a]">Reset_Handler</a> from startup_nuc100series.o(.text) referenced from startup_nuc100series.o(RESET)
 <LI><a href="#[1c]">SC012_IRQHandler</a> from startup_nuc100series.o(.text) referenced from startup_nuc100series.o(RESET)
 <LI><a href="#[14]">SPI0_IRQHandler</a> from startup_nuc100series.o(.text) referenced from startup_nuc100series.o(RESET)
 <LI><a href="#[15]">SPI1_IRQHandler</a> from startup_nuc100series.o(.text) referenced from startup_nuc100series.o(RESET)
 <LI><a href="#[16]">SPI2_IRQHandler</a> from startup_nuc100series.o(.text) referenced from startup_nuc100series.o(RESET)
 <LI><a href="#[17]">SPI3_IRQHandler</a> from startup_nuc100series.o(.text) referenced from startup_nuc100series.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_nuc100series.o(.text) referenced from startup_nuc100series.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from startup_nuc100series.o(.text) referenced from startup_nuc100series.o(RESET)
 <LI><a href="#[27]">SystemInit</a> from system_nuc100series.o(i.SystemInit) referenced from startup_nuc100series.o(.text)
 <LI><a href="#[e]">TMR0_IRQHandler</a> from startup_nuc100series.o(.text) referenced from startup_nuc100series.o(RESET)
 <LI><a href="#[f]">TMR1_IRQHandler</a> from startup_nuc100series.o(.text) referenced from startup_nuc100series.o(RESET)
 <LI><a href="#[10]">TMR2_IRQHandler</a> from startup_nuc100series.o(.text) referenced from startup_nuc100series.o(RESET)
 <LI><a href="#[11]">TMR3_IRQHandler</a> from startup_nuc100series.o(.text) referenced from startup_nuc100series.o(RESET)
 <LI><a href="#[12]">UART02_IRQHandler</a> from startup_nuc100series.o(.text) referenced from startup_nuc100series.o(RESET)
 <LI><a href="#[13]">UART1_IRQHandler</a> from startup_nuc100series.o(.text) referenced from startup_nuc100series.o(RESET)
 <LI><a href="#[1d]">USBD_IRQHandler</a> from startup_nuc100series.o(.text) referenced from startup_nuc100series.o(RESET)
 <LI><a href="#[7]">WDT_IRQHandler</a> from startup_nuc100series.o(.text) referenced from startup_nuc100series.o(RESET)
 <LI><a href="#[28]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_nuc100series.o(.text)
 <LI><a href="#[29]">_sputc</a> from printf1.o(i._sputc) referenced from printf1.o(i.__0sprintf$1)
 <LI><a href="#[26]">main</a> from main.o(i.main) referenced from entry8.o(.ARM.Collect$$$$00000009)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[28]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc100series.o(.text)
</UL>
<P><STRONG><a name="[4e]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[2b]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2d]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[4f]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[50]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8.o(.ARM.Collect$$$$00000009))

<P><STRONG><a name="[2a]"></a>Reset_Handler</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, startup_nuc100series.o(.text))

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc100series.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc100series.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc100series.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc100series.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc100series.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc100series.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc100series.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc100series.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc100series.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc100series.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>ACMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc100series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc100series.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc100series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc100series.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc100series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc100series.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>CAN0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc100series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc100series.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>CAN1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc100series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc100series.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>EINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc100series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc100series.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>GPAB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc100series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc100series.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>GPCDEF_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc100series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc100series.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc100series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc100series.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc100series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc100series.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc100series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc100series.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>PDMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc100series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc100series.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>PS2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc100series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc100series.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>PWM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc100series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc100series.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>PWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc100series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc100series.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>PWRWU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc100series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc100series.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc100series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc100series.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SC012_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc100series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc100series.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc100series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc100series.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc100series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc100series.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc100series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc100series.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc100series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc100series.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TMR0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc100series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc100series.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TMR1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc100series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc100series.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>TMR2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc100series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc100series.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TMR3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc100series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc100series.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>UART02_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc100series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc100series.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc100series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc100series.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USBD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc100series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc100series.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc100series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc100series.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[40]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[4d]"></a>strlen</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printS_5x7
</UL>

<P><STRONG><a name="[2c]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[52]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[32]"></a>Check_Back</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, main.o(i.Check_Back))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Key
</UL>

<P><STRONG><a name="[2e]"></a>Clear_Digit</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, main.o(i.Clear_Digit))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Clear_Digit &rArr; fill_Rectangle &rArr; draw_Pixel &rArr; lcdSetAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_Rectangle
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Key
</UL>

<P><STRONG><a name="[9]"></a>EINT1_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, main.o(i.EINT1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc100series.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>GPIO_SetMode</STRONG> (Thumb, 40 bytes, Stack size 20 bytes, gpio.o(i.GPIO_SetMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_SetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyPadEnable
</UL>

<P><STRONG><a name="[30]"></a>Get_Key</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, main.o(i.Get_Key))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Get_Key
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Timer
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyPadScanning
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Back
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[34]"></a>Input_Key</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, main.o(i.Input_Key))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = Input_Key &rArr; Clear_Digit &rArr; fill_Rectangle &rArr; draw_Pixel &rArr; lcdSetAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printS_5x7
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Timer
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_Digit
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[48]"></a>Interrupt_Config</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, main.o(i.Interrupt_Config))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4a]"></a>Is_Correct_Key</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, main.o(i.Is_Correct_Key))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Is_Correct_Key
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[37]"></a>KeyPadEnable</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, main.o(i.KeyPadEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = KeyPadEnable &rArr; GPIO_SetMode
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[31]"></a>KeyPadScanning</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, main.o(i.KeyPadScanning))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Key
</UL>

<P><STRONG><a name="[39]"></a>LCD_SetAddress</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, main.o(i.LCD_SetAddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_SetAddress
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_command
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_clear
</UL>

<P><STRONG><a name="[3b]"></a>LCD_clear</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, main.o(i.LCD_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LCD_clear &rArr; LCD_SetAddress
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_data
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetAddress
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3a]"></a>LCD_command</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, main.o(i.LCD_command))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_start
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetAddress
</UL>

<P><STRONG><a name="[3c]"></a>LCD_data</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, main.o(i.LCD_data))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_clear
</UL>

<P><STRONG><a name="[3d]"></a>LCD_start</STRONG> (Thumb, 46 bytes, Stack size 4 bytes, main.o(i.LCD_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LCD_start
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_command
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[47]"></a>SPI3_Config</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, main.o(i.SPI3_Config))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[33]"></a>Start_Timer</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, main.o(i.Start_Timer))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Key
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Key
</UL>

<P><STRONG><a name="[4b]"></a>Store_New_Key</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, main.o(i.Store_New_Key))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[27]"></a>SystemInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_nuc100series.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc100series.o(.text)
</UL>
<P><STRONG><a name="[45]"></a>System_Config</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, main.o(i.System_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = System_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[46]"></a>Timer0_Config</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, main.o(i.Timer0_Config))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3e]"></a>__0sprintf$1</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printf1.o(i.__0sprintf$1), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[53]"></a>__1sprintf$1</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf1.o(i.__0sprintf$1), UNUSED)

<P><STRONG><a name="[35]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf1.o(i.__0sprintf$1))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Key
</UL>

<P><STRONG><a name="[49]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, main.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[54]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[55]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[56]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[41]"></a>draw_LCD</STRONG> (Thumb, 48 bytes, Stack size 20 bytes, lcd.o(i.draw_LCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = draw_LCD &rArr; lcdSetAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdWriteData
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdSetAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[44]"></a>draw_Pixel</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, lcd.o(i.draw_Pixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = draw_Pixel &rArr; lcdSetAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdWriteData
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdSetAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_Rectangle
</UL>

<P><STRONG><a name="[2f]"></a>fill_Rectangle</STRONG> (Thumb, 66 bytes, Stack size 40 bytes, draw2d.o(i.fill_Rectangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = fill_Rectangle &rArr; draw_Pixel &rArr; lcdSetAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Pixel
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_Digit
</UL>

<P><STRONG><a name="[42]"></a>lcdSetAddr</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, lcd.o(i.lcdSetAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lcdSetAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_LCD
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printC_5x7
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Pixel
</UL>

<P><STRONG><a name="[43]"></a>lcdWriteData</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, lcd.o(i.lcdWriteData))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_LCD
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printC_5x7
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Pixel
</UL>

<P><STRONG><a name="[26]"></a>main</STRONG> (Thumb, 454 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = main &rArr; Input_Key &rArr; Clear_Digit &rArr; fill_Rectangle &rArr; draw_Pixel &rArr; lcdSetAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printS_5x7
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_LCD
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Config
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Config
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_New_Key
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Timer
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Config
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_start
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_clear
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyPadEnable
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_Correct_Key
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt_Config
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Key
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Key
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry8.o(.ARM.Collect$$$$00000009)
</UL>
<P><STRONG><a name="[4c]"></a>printC_5x7</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, lcd.o(i.printC_5x7))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = printC_5x7 &rArr; lcdSetAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdWriteData
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdSetAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printS_5x7
</UL>

<P><STRONG><a name="[36]"></a>printS_5x7</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, lcd.o(i.printS_5x7))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = printS_5x7 &rArr; printC_5x7 &rArr; lcdSetAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printC_5x7
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Key
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[24]"></a>Default_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc100series.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc100series.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>_printf_core</STRONG> (Thumb, 324 bytes, Stack size 88 bytes, printf1.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$1
</UL>

<P><STRONG><a name="[29]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf1.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf1.o(i.__0sprintf$1)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
